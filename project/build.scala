import sbt._
import Keys._

object BuildSettings {
  val buildSettings = Defaults.defaultSettings ++ Seq(
    organization      := "ro.igstan",
    version           := "0.1.0",
    scalacOptions    ++= Seq(
      "-feature",
      "-deprecation",
      "-unchecked",
      "-Ymacro-debug-lite" // Useful when debugging ASTs generated by macros.
    ),
    scalaVersion      := "2.11.0-SNAPSHOT",
    scalaOrganization := "org.scala-lang.macro-paradise",
    resolvers         += Resolver.sonatypeRepo("snapshots"),
    sourceDirectory in Compile <<= baseDirectory(_ / "src"),
    sourceDirectory in Test <<= baseDirectory(_ / "test")
  )
}

object MyBuild extends Build {
  import BuildSettings._

  lazy val root = Project(
    "root",
    file("core"),
    settings = buildSettings
  ) aggregate(macros, core)

  lazy val macros = Project(
    "macros",
    file("macros"),
    settings = buildSettings ++ Seq(
      libraryDependencies <+= (scalaVersion)("org.scala-lang.macro-paradise" % "scala-reflect" % _))
  )

  lazy val core = Project(
    "core",
    file("core"),
    settings = buildSettings
  ) dependsOn(macros)
}
